{"version":3,"sources":["components/ui/Notifications.js","utils/index.js","utils/constants.js","components/ui/Identicon.js","components/Wallet.js","logo.svg","components/Cover.js","context/LoadingContext.js","context/NotificationsContext.js","hooks/useMarketplaceContract.js","hooks/useContract.js","components/Product.js","utils/marketplace.js","context/BalanceContext.js","components/MainPage.js","components/LoadingAlert.js","App.js","reportWebVitals.js","index.js"],"names":["Notification","text","status","variant","useMemo","Alert","className","truncateAddress","address","slice","length","formatBigNumber","num","decimals","shiftedBy","toFixed","approve","kit","price","tokenContract","web3","eth","Contract","IERC20Token","abi","TokenAddress","methods","Marketplace","send","from","defaultAccount","result","getAllowance","allowance","call","Identicon","size","rest","ref","useRef","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","style","width","height","Wallet","amount","symbol","destroy","Dropdown","Toggle","align","id","Spinner","animation","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Cover","connect","name","description","connectWallet","console","log","e","src","logo","alt","Button","LoadingContext","React","createContext","LoadingContextProvider","children","useState","state","setState","increaseLoading","useCallback","prev","decreaseLoading","Provider","value","useLoadingContext","useContext","NotificationsContext","NotificationsContextProvider","notifications","setNotifications","insertNotification","duration","index","Date","getTime","setTimeout","filter","n","window","addNotification","useNotificationsContext","useMarketplaceContract","contractAddress","useContractKit","getConnectedKit","contract","setContract","getContract","useContract","MarketplaceAddress","Product","owner","image","location","sold","handleBuy","minHeight","getProductsQuantity","marketplaceContract","Number","getProductsLength","getProduct","readProduct","p","BigNumber","getProducts","productsQuantity","products","i","push","addProduct","performActions","product","writeProduct","Error","buyProduct","sendApprove","isGreaterThan","toString","sendBuyProduct","BalanceContext","BalanceContextProvider","balance","setBalance","refreshRequests","setRefreshRequests","incLoading","decLoading","getBalance","getTotalBalance","requestRefresh","useBalanceContext","MainPage","modalOpen","setModalOpen","loading","setLoading","setProducts","refreshBalance","then","handleAddProduct","undefined","catch","error","message","finally","handleBuyProduct","updated","map","isOpen","close","onProductAdded","AddProductModal","setProduct","handleChange","numberToBigNumber","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","onChange","placeholder","step","Footer","LoadingAlert","App","Container","fluid","Navbar","justifyContent","Brand","Nav","cUSD","notification","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","appName","ReactDOM","render","StrictMode","networks","Alfajores","network","NetworkNames","rpcUrl","graphQl","explorer","chainId","dapp","document","getElementById"],"mappings":"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","file":"static/js/main.e6e426ca.chunk.js","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Notification = ({ text, status }) => {\r\n  const variant = useMemo(() => {\r\n    switch (status) {\r\n      case \"success\":\r\n        return \"success\";\r\n      case \"warning\":\r\n        return \"warning\";\r\n      default:\r\n        return \"danger\";\r\n    }\r\n  }, [status])\r\n\r\n  return (\r\n    <Alert variant={variant} className=\"my-2\">\r\n      <span>{text}</span>\r\n    </Alert>\r\n  )\r\n};\r\n\r\nconst NotificationSuccess = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst NotificationError = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nexport { Notification, NotificationSuccess, NotificationError };\r\n","import { ERC20_DECIMALS } from \"./constants\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport IERC20Token from \"../contracts/IERC20Token.json\"\r\nimport { Marketplace, TokenAddress } from \"../contracts/MarketplaceAddress.json\"\r\n\r\n// format a wallet address\r\nexport const truncateAddress = (address) => {\r\n    if (!address) return\r\n    return address.slice(0, 5) + \"...\" + address.slice(address.length - 4, address.length);\r\n}\r\n\r\n// convert from big number\r\nexport const formatBigNumber = (num, decimals = ERC20_DECIMALS) => {\r\n    if (!num) return\r\n    if (!num.shiftedBy) return \"\";\r\n\r\n    return num.shiftedBy(-decimals).toFixed(2);\r\n}\r\n\r\n// convert to big number\r\nexport const numberToBigNumber = (num, decimals = ERC20_DECIMALS) => {\r\n    if (!num) return\r\n    return new BigNumber(num).shiftedBy(decimals);\r\n}\r\n\r\n// approve token spending\r\nexport const approve = async (kit, price = \"0xffffffffffffffffffffffffffffffffffffffff\") => {\r\n    const tokenContract = new kit.web3.eth.Contract(IERC20Token.abi, TokenAddress);\r\n\r\n    const result = await tokenContract.methods.approve(Marketplace, price).send({ from: kit.defaultAccount });\r\n    return result;\r\n}\r\n\r\n// get token spendig allowance\r\nexport const getAllowance = async (kit) => {\r\n    const tokenContract = new kit.web3.eth.Contract(IERC20Token.abi, TokenAddress);\r\n\r\n    const allowance = await tokenContract.methods.allowance(kit.defaultAccount, Marketplace).call();\r\n    return allowance;\r\n}","const ERC20_DECIMALS = 18;\r\nexport { ERC20_DECIMALS };\r\n","import { useEffect, useRef } from \"react\";\r\nimport Jazzicon from \"@metamask/jazzicon\";\r\n\r\nexport const Identicon = ({ address, size = 28, ...rest }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    if (address && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(\r\n        Jazzicon(size, parseInt(address.slice(2, 10), 16))\r\n      );\r\n    }\r\n  }, [address, size]);\r\n\r\n  return (\r\n    <div {...rest}>\r\n      <div ref={ref} style={{ width: `${size}px`, height: `${size}px` }} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\r\nimport { formatBigNumber, truncateAddress } from \"./../utils\";\r\nimport { Identicon } from \"./ui/Identicon\";\r\n\r\nexport const Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant=\"light\"\r\n            align=\"end\"\r\n            id=\"dropdown-basic\"\r\n            className=\"d-flex align-items-center border rounded-pill py-1\"\r\n          >\r\n            {amount ? (\r\n              <>\r\n                {formatBigNumber(amount)}{\" \"}\r\n                <span className=\"ms-1\"> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\r\n            )}\r\n            <Identicon address={address} size={28} className=\"ms-2 me-1\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className=\"shadow-lg border-0\">\r\n            <Dropdown.Item\r\n              href={`https://alfajores-blockscout.celo-testnet.org/address/${address}/transactions`}\r\n              target=\"_blank\"\r\n            >\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <i className=\"bi bi-person-circle fs-4\" />\r\n                <span className=\"font-monospace\">\r\n                  {truncateAddress(address)}\r\n                </span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              className=\"d-flex align-items-center\"\r\n              onClick={() => {\r\n                destroy();\r\n              }}\r\n            >\r\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"../logo.svg\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport const Cover = ({ connect, name, description }) => {\r\n  const connectWallet = async () => {\r\n    try {\r\n      await connect();\r\n    } catch (e) {\r\n      console.log({ e });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <p>\r\n        {name}<br />\r\n        <small>{description}</small>\r\n      </p>\r\n      <Button variant=\"primary\" onClick={connectWallet}>\r\n        Connect Wallet\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useState, useCallback } from 'react';\r\n\r\nconst LoadingContext = React.createContext([])\r\n\r\nconst LoadingContextProvider = ({ children }) => {\r\n\tconst [state, setState] = useState(0);\r\n\r\n\tconst increaseLoading = useCallback(\r\n\t\t() => {\r\n\t\t\tsetState(prev => prev + 1);\r\n\t\t},\r\n\t\t[setState],\r\n\t);\r\n\r\n\tconst decreaseLoading = useCallback(\r\n\t\t() => {\r\n\t\t\tsetState(prev => prev - 1);\r\n\t\t},\r\n\t\t[setState],\r\n\t);\r\n\r\n\r\n\treturn <LoadingContext.Provider value={[state !== 0, increaseLoading, decreaseLoading]}>\r\n\t\t{children}\r\n\t</LoadingContext.Provider>\r\n}\r\n\r\nconst useLoadingContext = () => {\r\n\tconst context = useContext(LoadingContext)\r\n\r\n\treturn context\r\n}\r\n\r\nexport { LoadingContextProvider, useLoadingContext }\r\n","import React, { useContext, useState, useCallback } from 'react';\r\n\r\nconst NotificationsContext = React.createContext([])\r\n\r\nconst NotificationsContextProvider = ({ children }) => {\r\n\tconst [notifications, setNotifications] = useState([]);\r\n\r\n\tconst insertNotification = useCallback(\r\n\t\t({text, status = \"success\", duration = 5000}) => {\r\n\t\t\tconst index = new Date().getTime();\r\n\t\t\tsetNotifications(prev => [...prev, {text, status, duration, index}]);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetNotifications(prev => prev.filter(n => n.index !== index));\r\n\t\t\t}, duration);\r\n\t\t},\r\n\t\t[setNotifications],\r\n\t);\r\n\r\n\twindow.addNotification = insertNotification;\r\n\r\n\treturn <NotificationsContext.Provider value={[notifications, insertNotification]}>\r\n\t\t{children}\r\n\t</NotificationsContext.Provider>\r\n}\r\n\r\nconst useNotificationsContext = () => {\r\n\tconst context = useContext(NotificationsContext)\r\n\r\n\treturn context\r\n}\r\n\r\nexport { NotificationsContextProvider, useNotificationsContext }\r\n","import { useContract } from \"./useContract\";\r\nimport Marketplace from \"../contracts/Marketplace.json\";\r\nimport MarketplaceAddress from \"../contracts/MarketplaceAddress.json\";\r\n\r\n// export interface for smart contract\r\nexport const useMarketplaceContract = () =>\r\n  useContract(Marketplace.abi, MarketplaceAddress.Marketplace);\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\n\r\nexport const useContract = (abi, contractAddress) => {\r\n  const { getConnectedKit, address } = useContractKit();\r\n  const [contract, setContract] = useState(null);\r\n\r\n  const getContract = useCallback(async () => {\r\n    const kit = await getConnectedKit();\r\n    setContract(new kit.web3.eth.Contract(abi, contractAddress));\r\n  }, [getConnectedKit, abi, contractAddress]);\r\n\r\n  useEffect(() => {\r\n    if (address) getContract();\r\n  }, [address, getContract]);\r\n\r\n  return contract;\r\n};\r\n","import React from 'react'\r\nimport { formatBigNumber } from '../utils'\r\n\r\n\r\nimport { Identicon } from './ui/Identicon'\r\n\r\nexport const Product = ({ owner, name, image, description, location, price, sold, index, handleBuy }) => {\r\n\treturn (\r\n\t\t<div className=\"card mb-4\">\r\n\t\t\t<img className=\"card-img-top\" src={image} alt=\"Product\" />\r\n\t\t\t<div className=\"position-absolute top-0 end-0 bg-warning mt-4 px-2 py-1 rounded-start\">\r\n\t\t\t\t{sold} Sold\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body text-left p-4 position-relative\">\r\n\t\t\t\t<div className=\"translate-middle-y position-absolute top-0\">\r\n\t\t\t\t\t<Identicon address={owner} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2 className=\"card-title fs-4 fw-bold mt-2\">{name}</h2>\r\n\t\t\t\t<p className=\"card-text mb-4\" style={{ minHeight: \"82px\" }}>\r\n\t\t\t\t\t{description}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"card-text mt-4\">\r\n\t\t\t\t\t<i className=\"bi bi-geo-alt-fill\"></i>\r\n\t\t\t\t\t<span>{location}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"d-grid gap-2\">\r\n\t\t\t\t\t<span className=\"btn btn-lg btn-outline-dark buyBtn fs-6 p-3\" id={`n${index}`} onClick={() => handleBuy(index)}>\r\n\t\t\t\t\t\t{/* TODO: Use custom token */}\r\n\t\t\t\t\t\t{/* TODO: Use custom token decimals */}\r\n\t\t\t\t\t\tBuy for {formatBigNumber(price, 18)} cUSD\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import BigNumber from \"bignumber.js\";\r\nimport { approve, getAllowance } from \".\";\r\n\r\nexport const getProductsQuantity = async (marketplaceContract) => {\r\n\ttry {\r\n\t\t// return how many products are in the marketplace\r\n\t\treturn Number(await marketplaceContract.methods.getProductsLength().call());\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nexport const getProduct = async (marketplaceContract, index) => {\r\n\ttry {\r\n\t\t// fetch the product at the given index\r\n\t\tconst p =\r\n\t\t\tawait marketplaceContract.methods.readProduct(index).call();\r\n\r\n\t\t// return the product\r\n\t\treturn {\r\n\t\t\tindex: index,\r\n\t\t\towner: p[0],\r\n\t\t\tname: p[1],\r\n\t\t\timage: p[2],\r\n\t\t\tdescription: p[3],\r\n\t\t\tlocation: p[4],\r\n\t\t\tprice: new BigNumber(p[5]),\r\n\t\t\tsold: p[6],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nexport const getProducts = async (marketplaceContract) => {\r\n\ttry {\r\n\t\t// return all the products in the marketplace\r\n\t\tconst productsQuantity = await getProductsQuantity(marketplaceContract);\r\n\t\tconst products = [];\r\n\r\n\t\tfor (let i = 0; i < productsQuantity; i++) {\r\n\t\t\tproducts.push(await getProduct(marketplaceContract, i));\r\n\t\t}\r\n\r\n\t\treturn products;\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nexport const addProduct = async (marketplaceContract, performActions, product) => {\r\n\ttry {\r\n\t\tawait performActions(async (kit) => {\r\n\t\t\tconst { defaultAccount } = kit;\r\n\r\n\t\t\t// add a new product to the marketplace\r\n\t\t\tawait marketplaceContract.methods.writeProduct(\r\n\t\t\t\tproduct.name,\r\n\t\t\t\tproduct.image,\r\n\t\t\t\tproduct.description,\r\n\t\t\t\tproduct.location,\r\n\t\t\t\tproduct.price\r\n\t\t\t).send({ from: defaultAccount });\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tthrow new Error(`⚠️ ${error}`);\r\n\t}\r\n};\r\n\r\nexport const buyProduct = async (marketplaceContract, performActions, index, price) => {\r\n\ttry {\r\n\t\t// define function to send token spending approval\r\n\t\tconst sendApprove = async (kit) => {\r\n\t\t\t// Check if the allowance needs to be updated\r\n\t\t\tconst allowance = new BigNumber(await getAllowance(kit));\r\n\r\n\t\t\tif (price.isGreaterThan(allowance)) {\r\n\t\t\t\t// approve the marketplace to spend the tokens\r\n\t\t\t\tawait approve(kit, `0x${price.toString(16)}`);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// define function to send \"buyProduct\" transaction\r\n\t\tconst sendBuyProduct = async (kit) => {\r\n\t\t\tconst { defaultAccount } = kit;\r\n\r\n\t\t\t// add a new product to the marketplace\r\n\t\t\tawait marketplaceContract.methods.buyProduct(index).send({ from: defaultAccount });\r\n\t\t};\r\n\r\n\t\tawait performActions(sendApprove, sendBuyProduct);\r\n\t} catch (error) {\r\n\t\tthrow new Error(`⚠️ ${error}`);\r\n\t}\r\n};\r\n","import { useContractKit } from '@celo-tools/use-contractkit';\r\nimport React, { useContext, useState, useEffect, useCallback } from 'react';\r\nimport { useLoadingContext } from './LoadingContext';\r\n\r\nconst BalanceContext = React.createContext([])\r\n\r\nconst BalanceContextProvider = ({ children }) => {\r\n\tconst { address, kit } = useContractKit();\r\n  const [balance, setBalance] = useState(0);\r\n\tconst [refreshRequests, setRefreshRequests] = useState(0);\r\n  const [,incLoading, decLoading] = useLoadingContext();\r\n\r\n  const getBalance = useCallback(async () => {\r\n    // Set loading\r\n    incLoading();\r\n    \r\n    // fetch a connected wallet token balance\r\n    // TODO: Change to generic ERC20\r\n    const value = await kit.getTotalBalance(address);\r\n    setBalance(value);\r\n\r\n    // Reset loading\r\n    decLoading();\r\n  }, [address, kit, incLoading, decLoading]);\r\n\r\n  useEffect(() => {\r\n    if (address) getBalance();\r\n  }, [address, getBalance, refreshRequests]);\r\n\r\n\tconst requestRefresh = useCallback(() => setRefreshRequests(prev => prev + 1), [setRefreshRequests]);\r\n\r\n\treturn <BalanceContext.Provider value={[balance, requestRefresh]}>\r\n\t\t{children}\r\n\t</BalanceContext.Provider>\r\n}\r\n\r\nconst useBalanceContext = () => {\r\n\tconst context = useContext(BalanceContext)\r\n\r\n\treturn context\r\n}\r\n\r\nexport { BalanceContextProvider, useBalanceContext }\r\n","import React, { useState, useCallback, useEffect } from \"react\"\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\n\r\nimport { useLoadingContext } from \"../context/LoadingContext\";\r\nimport { useNotificationsContext } from \"../context/NotificationsContext\";\r\n\r\nimport { useMarketplaceContract } from \"../hooks\";\r\n\r\nimport { Product } from \"./Product\";\r\nimport { addProduct, buyProduct, getProduct, getProducts } from \"../utils/marketplace\";\r\nimport { getAllowance, numberToBigNumber } from \"../utils\";\r\nimport { useBalanceContext } from \"../context/BalanceContext\";\r\n\r\nexport const MainPage = () => {\r\n    const { kit, performActions } = useContractKit();\r\n    const marketplaceContract = useMarketplaceContract();\r\n\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [products, setProducts] = useState();\r\n\r\n    const [, incLoading, decLoading] = useLoadingContext();\r\n    const [, insertNotification] = useNotificationsContext();\r\n    const [, refreshBalance] = useBalanceContext();\r\n\r\n    useEffect(() => {\r\n        if (!marketplaceContract) return;\r\n        if (loading) return;\r\n        if (products) return;\r\n\r\n        if (incLoading && decLoading) {\r\n            setLoading(true);\r\n            incLoading();\r\n            getProducts(marketplaceContract).then(products => {\r\n                setProducts(products);\r\n                setLoading(false);\r\n                decLoading();\r\n            });\r\n        }\r\n    }, [marketplaceContract, loading, setLoading, incLoading, decLoading, products]);\r\n\r\n    const handleAddProduct = useCallback((product) => {\r\n        if (!marketplaceContract) return;\r\n\r\n        if (incLoading && decLoading) {\r\n            incLoading();\r\n            addProduct(marketplaceContract, performActions, product).then(() => {\r\n                insertNotification({\r\n                    status: \"success\",\r\n                    text: `${product.name} added to marketplace`\r\n                });\r\n                setProducts(undefined);\r\n            }).catch((error) => {\r\n                insertNotification({\r\n                    status: \"error\",\r\n                    text: error.message\r\n                });\r\n            }).finally(() => {\r\n                decLoading();\r\n            });\r\n        }\r\n    }, [marketplaceContract, performActions, incLoading, decLoading, insertNotification]);\r\n\r\n    window.handleAddProduct = handleAddProduct;\r\n    window.getAllowance = () => getAllowance(kit);\r\n\r\n\r\n    const handleBuyProduct = useCallback((index) => {\r\n        if (!marketplaceContract) return;\r\n\r\n        if (incLoading && decLoading) {\r\n            incLoading();\r\n            buyProduct(marketplaceContract, performActions, index, products[index].price).then(() => {\r\n                insertNotification({\r\n                    status: \"success\",\r\n                    text: `🎉 You successfully bought \"${products[index].name}\".`\r\n                });\r\n\r\n                // Refresh balance\r\n                refreshBalance();\r\n\r\n                // refresh current product\r\n                getProduct(marketplaceContract, index).then(updated => {\r\n                    setProducts(prev => prev.map((product, i) => {\r\n                        if (i === index) {\r\n                            return updated;\r\n                        }\r\n                        return product;\r\n                    }));\r\n                }).catch(() => setProducts());\r\n            }).catch((error) => {\r\n                insertNotification({\r\n                    status: \"error\",\r\n                    text: error.message\r\n                });\r\n            }).finally(() => {\r\n                decLoading();\r\n            });\r\n        }\r\n    }, [marketplaceContract, performActions, refreshBalance, products, incLoading, decLoading, insertNotification]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-end my-4\">\r\n                <Button variant=\"dark\" className=\"rounded-pill\" onClick={() => {\r\n                    setModalOpen(true)\r\n                }}>Add product</Button>\r\n            </div>\r\n\r\n            <main className=\"row\">\r\n                {products && products.map(product =>\r\n                    <div key={product.index} className=\"col-sm-6 col-md-4\">\r\n                        <Product {...product} handleBuy={handleBuyProduct} />\r\n                    </div>\r\n                )}\r\n            </main>\r\n\r\n            {\r\n                modalOpen && <AddProductModal isOpen={modalOpen}\r\n                    close={setModalOpen}\r\n                    onProductAdded={handleAddProduct} />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst AddProductModal = ({ isOpen, close, onProductAdded }) => {\r\n    const [product, setProduct] = useState({\r\n        name: \"aaa\",\r\n        image: \"bbb\",\r\n        description: \"ccc\",\r\n        location: \"ddd\",\r\n        price: 123,\r\n        sold: 0,\r\n    });\r\n\r\n    const handleChange = useCallback(\r\n        ({ target }) => {\r\n            setProduct(prev => ({\r\n                ...prev,\r\n\r\n                // If the target is price, convert to number\r\n                [target.name]: target.name === \"price\" ? numberToBigNumber(target.value) : target.value,\r\n            }));\r\n        }, [setProduct],\r\n    )\r\n\r\n    return <Modal show={isOpen} onHide={() => close()}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>New product</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group className=\"mb-3\" controlId=\"productName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" onChange={handleChange} placeholder=\"Name of the product\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"productImage\">\r\n                    <Form.Label>Image</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"image\" onChange={handleChange} placeholder=\"Image url of the product\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"productDescription\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"description\" onChange={handleChange} placeholder=\"Description of the product\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"productLocation\">\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"location\" onChange={handleChange} placeholder=\"Location of the product\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"productPrice\">\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control type=\"number\" step=\".01\" name=\"price\" onChange={handleChange} placeholder=\"Price of the product\" />\r\n                </Form.Group>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => close()}>\r\n                Close\r\n            </Button>\r\n            <Button variant=\"dark\" onClick={() => {\r\n                close();\r\n                onProductAdded(product);\r\n            }}>\r\n                Add product\r\n            </Button>\r\n        </Modal.Footer>\r\n    </Modal>;\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Notification } from \"./ui/Notifications\";\r\n\r\nexport const LoadingAlert = () => <Notification text=\"⌛ Loading...\" status=\"warning\" />;\r\n","import React from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport { Notification } from \"./components/ui/Notifications\";\r\nimport { Wallet } from \"./components/Wallet\";\r\nimport { Cover } from \"./components/Cover\";\r\nimport { MainPage } from \"./components/MainPage\";\r\nimport \"./App.css\";\r\nimport { LoadingAlert } from \"./components/LoadingAlert\";\r\nimport { useLoadingContext } from \"./context/LoadingContext\";\r\nimport { useNotificationsContext } from \"./context/NotificationsContext\";\r\nimport { useBalanceContext } from \"./context/BalanceContext\";\r\n\r\nconst App = function AppWrapper({ name, description }) {\r\n  const { address, destroy, connect } = useContractKit();\r\n  const [balance] = useBalanceContext();\r\n\r\n  const [loading] = useLoadingContext();\r\n  const [notifications] = useNotificationsContext();\r\n\r\n  return (\r\n    <>\r\n      {address ? (\r\n        <Container fluid=\"md\">\r\n          <Navbar className=\"py-3\" style={{ justifyContent: \"space-between\" }}>\r\n            <Navbar.Brand>{name}</Navbar.Brand>\r\n\r\n            <Nav className=\"justify-content-end\">\r\n              <Nav.Item>\r\n                {/*display user wallet*/}\r\n                {/* TODO: Change to generic ERC20 */}\r\n                <Wallet\r\n                  address={address}\r\n                  amount={balance.cUSD}\r\n                  symbol=\"cUSD\"\r\n                  destroy={destroy}\r\n                />\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Navbar>\r\n\r\n          <div className=\"sticky-top\">\r\n            {loading && <LoadingAlert />}\r\n\r\n            {\r\n              notifications.map((notification, index) => (\r\n                <Notification\r\n                  key={index}\r\n                  status={notification.status}\r\n                  text={notification.text}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n\r\n          {/* display cover */}\r\n          <main>\r\n            <MainPage />\r\n          </main>\r\n        </Container>\r\n      ) : (\r\n        // display cover if user is not connected\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <Cover {...{ connect, name, description }} />\r\n          </header>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  ContractKitProvider,\r\n  Alfajores,\r\n  NetworkNames,\r\n} from \"@celo-tools/use-contractkit\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@celo-tools/use-contractkit/lib/styles.css\";\r\n\r\nimport { LoadingContextProvider } from \"./context/LoadingContext\";\r\nimport { NotificationsContextProvider } from \"./context/NotificationsContext\";\r\nimport { BalanceContextProvider } from \"./context/BalanceContext\";\r\n\r\nconst appName = {\r\n  name: \"Food Market DApp\",\r\n  description: \"A basic marketplace dapp for Celo\",\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContractKitProvider\r\n      networks={[Alfajores]}\r\n      network={{\r\n        name: NetworkNames.Alfajores,\r\n        rpcUrl: \"https://alfajores-forno.celo-testnet.org\",\r\n        graphQl: \"https://alfajores-blockscout.celo-testnet.org/graphiql\",\r\n        explorer: \"https://alfajores-blockscout.celo-testnet.org\",\r\n        chainId: 44787,\r\n      }}\r\n      dapp={appName}\r\n    >\r\n      <LoadingContextProvider>\r\n        <NotificationsContextProvider>\r\n          <BalanceContextProvider>\r\n            <App {...appName} />\r\n          </BalanceContextProvider>\r\n        </NotificationsContextProvider>\r\n      </LoadingContextProvider>\r\n    </ContractKitProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}